body,
ul,
li,
p{
    margin: 0px;
    list-style: none;
    font-size: 1.2rem;
    font-family: Arial;   
}

body{
    margin-bottom: 100px;
}

h1{
    text-align: center;
    margin-top: 100px;
}

img{
    max-width: 100%;
    /* border: 2px solid red; */
    display: block;
}

/* div, img{
    border: 2px solid red;
} */

a{
    text-decoration: none;
    color: white;
}

.header{
    background: #1d1e20;
    display: flex;
    /* justify-content: space-around; propriedade que cria espaços iguais dos lados direito e esquerdo dos dois itens*/
    justify-content: space-between;
    padding: 20px;
    flex: wrap; /*quando a tela fica bem pequena, o menu fica abaixo da logo*/
    align-items: center;
}

.menu{
    display: flex;
}

.menu li{
    margin-left: 10px;
    /* background: tomato; para enxergar a área clicável */
    display: block; /*aumenta a área de clique nos links em 10px*/
    padding: 10px;
}

/* CSS FLEXBOX 1*/

.flex{
    display: flex;
    flex-wrap: wrap;
    max-width: 800px;
    margin: 0 auto;
}

/*acessando a div que consta dentro do flex*/

.flex > div{
    /*se a div não ter 200px vai quebrar*/
    flex: 1 1 200px; 
    margin: 10px;
}

/*CSS GRID 1*/

.grid1{
    display: grid;
    /*como se eu tivesse dividindo os 100% em 3 partes*/
    /* grid-template-columns: 1fr 1fr 1fr; */
    grid-template-columns: repeat(3,1fr);
    max-width: 800;
    padding: 10px;
    margin: 0 auto;
    grid-gap: 20px; /*padding de 20px*/
}

/* Aplicando somente no primeiro elemento o blue*/
/* 
.grid1 > div:nth-child(1){
    background: blue;
} */

/* a partir do quinto elemento vai ser blue*/

.grid1 > div:nth-child(n + 4){
    /* background: blue;     */
    display: grid;
    grid-template-columns: 1fr 1fr; 
    grid-gap: 10px; /*paddings*/
    align-items: center;
} 

.grid1 > div.anuncio{
    /* quero que o anuncio ocupe uma coluna somente*/
    grid-column: 1;
    /*quero que o anuncio ocupe da linha 2 a linha 5, 
    ou seja, o grid conta as ims e h1 como uma unica linha*/
    grid-row: 2/5;
    display: block;
    /* border: 20px solid tomato; */
}

/* Responsive with media queries*/

/*tudo que for abaixo de 600px*/
@media (max-width: 600px){
    .grid1{
        grid-template-columns: repeat(2,1fr);
    }
    /*retirando os estilos para desktop*/
    .grid1 > div:nth-child(n + 4){
        display: block;
        border: 2px solid red;
    }
    .grid1 .anuncio{
        grid-column: auto;
        grid-row: auto;
        order: -1; /*ele vai ser o primeiro item a aparecer*/
    }
} 

.title-exercicio{
    color: tomato;
}


/*CSS GRID 2*/

.grid2{
    display: grid;
    grid-template-columns: 1fr 200px;
    grid-gap: 20px;
    max-width: 800px;
    padding: 10px;
    margin: 0 auto;
}

.sidebar > div{
    margin-bottom: 10px;
}

/* Grid 2 Responsive*/

@media (max-width: 600px){
    .grid2{
        grid-template-columns: 1fr;
    }
    .sidebar{
        display: flex;
        /*caso ultrapasse o tamanho tenha um scroll*/
        overflow: scroll;
    }
    .sidebar > div{
        flex: 1 0 200px;
        margin: 0 10px;
    }
}

/* CSS GRID 3*/
.title-grid3{
    color: purple;
}

.grid3{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 20px;
    margin: 0 auto;
    max-width: 800px;
    padding: 10px;
}

.grid3-item:nth-child(1){
    /* border: 2px solid red; */
    grid-row: 1/3; /*o lobo maior vai ocupar a linha 1 até a linha 3*/
}

.grid3-item{
    display: grid;
}

.grid3-item img{
    grid-column: 1;
    grid-row: 1/3;
    align-self: end;
}

.grid3-item p{
    background-color: rgba(163, 53, 71, 0.63);
    padding: 10px;
    color: white;
    grid-column: 1;
    grid-row: 2;
    align-self: end;
}